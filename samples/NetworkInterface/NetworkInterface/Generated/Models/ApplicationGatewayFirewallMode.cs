// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace NetworkInterface.Models
{
    /// <summary> Web application firewall mode. </summary>
    public readonly partial struct ApplicationGatewayFirewallMode : IEquatable<NetworkInterface.Models.ApplicationGatewayFirewallMode>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ApplicationGatewayFirewallMode"/> values are the same. </summary>
        public ApplicationGatewayFirewallMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string DetectionValue = "Detection";
        private const string PreventionValue = "Prevention";

        /// <summary> Detection. </summary>
        public static NetworkInterface.Models.ApplicationGatewayFirewallMode Detection { get; } = new NetworkInterface.Models.ApplicationGatewayFirewallMode(DetectionValue);
        /// <summary> Prevention. </summary>
        public static NetworkInterface.Models.ApplicationGatewayFirewallMode Prevention { get; } = new NetworkInterface.Models.ApplicationGatewayFirewallMode(PreventionValue);
        /// <summary> Determines if two <see cref="ApplicationGatewayFirewallMode"/> values are the same. </summary>
        public static bool operator ==(NetworkInterface.Models.ApplicationGatewayFirewallMode left, NetworkInterface.Models.ApplicationGatewayFirewallMode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ApplicationGatewayFirewallMode"/> values are not the same. </summary>
        public static bool operator !=(NetworkInterface.Models.ApplicationGatewayFirewallMode left, NetworkInterface.Models.ApplicationGatewayFirewallMode right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ApplicationGatewayFirewallMode"/>. </summary>
        public static implicit operator NetworkInterface.Models.ApplicationGatewayFirewallMode(string value) => new NetworkInterface.Models.ApplicationGatewayFirewallMode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is NetworkInterface.Models.ApplicationGatewayFirewallMode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(NetworkInterface.Models.ApplicationGatewayFirewallMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
