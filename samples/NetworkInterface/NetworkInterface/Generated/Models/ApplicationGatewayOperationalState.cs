// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace NetworkInterface.Models
{
    /// <summary> Operational state of the application gateway resource. </summary>
    public readonly partial struct ApplicationGatewayOperationalState : IEquatable<NetworkInterface.Models.ApplicationGatewayOperationalState>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ApplicationGatewayOperationalState"/> values are the same. </summary>
        public ApplicationGatewayOperationalState(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string StoppedValue = "Stopped";
        private const string StartingValue = "Starting";
        private const string RunningValue = "Running";
        private const string StoppingValue = "Stopping";

        /// <summary> Stopped. </summary>
        public static NetworkInterface.Models.ApplicationGatewayOperationalState Stopped { get; } = new NetworkInterface.Models.ApplicationGatewayOperationalState(StoppedValue);
        /// <summary> Starting. </summary>
        public static NetworkInterface.Models.ApplicationGatewayOperationalState Starting { get; } = new NetworkInterface.Models.ApplicationGatewayOperationalState(StartingValue);
        /// <summary> Running. </summary>
        public static NetworkInterface.Models.ApplicationGatewayOperationalState Running { get; } = new NetworkInterface.Models.ApplicationGatewayOperationalState(RunningValue);
        /// <summary> Stopping. </summary>
        public static NetworkInterface.Models.ApplicationGatewayOperationalState Stopping { get; } = new NetworkInterface.Models.ApplicationGatewayOperationalState(StoppingValue);
        /// <summary> Determines if two <see cref="ApplicationGatewayOperationalState"/> values are the same. </summary>
        public static bool operator ==(NetworkInterface.Models.ApplicationGatewayOperationalState left, NetworkInterface.Models.ApplicationGatewayOperationalState right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ApplicationGatewayOperationalState"/> values are not the same. </summary>
        public static bool operator !=(NetworkInterface.Models.ApplicationGatewayOperationalState left, NetworkInterface.Models.ApplicationGatewayOperationalState right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ApplicationGatewayOperationalState"/>. </summary>
        public static implicit operator NetworkInterface.Models.ApplicationGatewayOperationalState(string value) => new NetworkInterface.Models.ApplicationGatewayOperationalState(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is NetworkInterface.Models.ApplicationGatewayOperationalState other && Equals(other);
        /// <inheritdoc />
        public bool Equals(NetworkInterface.Models.ApplicationGatewayOperationalState other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
