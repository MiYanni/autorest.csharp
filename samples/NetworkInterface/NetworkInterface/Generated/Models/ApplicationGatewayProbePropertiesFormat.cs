// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace NetworkInterface.Models
{
    /// <summary> Properties of probe of an application gateway. </summary>
    public partial class ApplicationGatewayProbePropertiesFormat
    {
        /// <summary> The protocol used for the probe. </summary>
        public NetworkInterface.Models.ApplicationGatewayProtocol? Protocol { get; set; }
        /// <summary> Host name to send the probe to. </summary>
        public string Host { get; set; }
        /// <summary> Relative path of probe. Valid path starts from &apos;/&apos;. Probe is sent to &lt;Protocol&gt;://&lt;host&gt;:&lt;port&gt;&lt;path&gt;. </summary>
        public string Path { get; set; }
        /// <summary> The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds. </summary>
        public int? Interval { get; set; }
        /// <summary> The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds. </summary>
        public int? Timeout { get; set; }
        /// <summary> The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20. </summary>
        public int? UnhealthyThreshold { get; set; }
        /// <summary> Whether the host header should be picked from the backend http settings. Default value is false. </summary>
        public bool? PickHostNameFromBackendHttpSettings { get; set; }
        /// <summary> Minimum number of servers that are always marked healthy. Default value is 0. </summary>
        public int? MinServers { get; set; }
        /// <summary> Criterion for classifying a healthy probe response. </summary>
        public NetworkInterface.Models.ApplicationGatewayProbeHealthResponseMatch Match { get; set; }
        /// <summary> The provisioning state of the probe resource. </summary>
        public NetworkInterface.Models.ProvisioningState? ProvisioningState { get; internal set; }
        /// <summary> Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only. </summary>
        public int? Port { get; set; }
    }
}
