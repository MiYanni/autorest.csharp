// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace NetworkInterface.Models
{
    public partial class ApplicationGatewayRewriteRule : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Name != null)
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (RuleSequence != null)
            {
                writer.WritePropertyName("ruleSequence");
                writer.WriteNumberValue(RuleSequence.Value);
            }
            if (Conditions != null)
            {
                writer.WritePropertyName("conditions");
                writer.WriteStartArray();
                foreach (var item in Conditions)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (ActionSet != null)
            {
                writer.WritePropertyName("actionSet");
                writer.WriteObjectValue(ActionSet);
            }
            writer.WriteEndObject();
        }
        internal static NetworkInterface.Models.ApplicationGatewayRewriteRule DeserializeApplicationGatewayRewriteRule(JsonElement element)
        {
            NetworkInterface.Models.ApplicationGatewayRewriteRule result = new NetworkInterface.Models.ApplicationGatewayRewriteRule();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("name"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ruleSequence"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.RuleSequence = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("conditions"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Conditions = new List<NetworkInterface.Models.ApplicationGatewayRewriteRuleCondition>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.Conditions.Add(NetworkInterface.Models.ApplicationGatewayRewriteRuleCondition.DeserializeApplicationGatewayRewriteRuleCondition(item));
                    }
                    continue;
                }
                if (property.NameEquals("actionSet"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ActionSet = NetworkInterface.Models.ApplicationGatewayRewriteRuleActionSet.DeserializeApplicationGatewayRewriteRuleActionSet(property.Value);
                    continue;
                }
            }
            return result;
        }
    }
}
