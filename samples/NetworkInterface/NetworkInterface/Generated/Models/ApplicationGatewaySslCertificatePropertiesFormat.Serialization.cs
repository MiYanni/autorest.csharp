// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace NetworkInterface.Models
{
    public partial class ApplicationGatewaySslCertificatePropertiesFormat : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Data != null)
            {
                writer.WritePropertyName("data");
                writer.WriteStringValue(Data);
            }
            if (Password != null)
            {
                writer.WritePropertyName("password");
                writer.WriteStringValue(Password);
            }
            if (PublicCertData != null)
            {
                writer.WritePropertyName("publicCertData");
                writer.WriteStringValue(PublicCertData);
            }
            if (KeyVaultSecretId != null)
            {
                writer.WritePropertyName("keyVaultSecretId");
                writer.WriteStringValue(KeyVaultSecretId);
            }
            if (ProvisioningState != null)
            {
                writer.WritePropertyName("provisioningState");
                writer.WriteStringValue(ProvisioningState.Value.ToString());
            }
            writer.WriteEndObject();
        }
        internal static NetworkInterface.Models.ApplicationGatewaySslCertificatePropertiesFormat DeserializeApplicationGatewaySslCertificatePropertiesFormat(JsonElement element)
        {
            NetworkInterface.Models.ApplicationGatewaySslCertificatePropertiesFormat result = new NetworkInterface.Models.ApplicationGatewaySslCertificatePropertiesFormat();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("data"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Data = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("password"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Password = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("publicCertData"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.PublicCertData = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("keyVaultSecretId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.KeyVaultSecretId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ProvisioningState = new NetworkInterface.Models.ProvisioningState(property.Value.GetString());
                    continue;
                }
            }
            return result;
        }
    }
}
