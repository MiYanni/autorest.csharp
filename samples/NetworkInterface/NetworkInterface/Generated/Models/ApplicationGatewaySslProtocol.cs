// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace NetworkInterface.Models
{
    /// <summary> Ssl protocol enums. </summary>
    public readonly partial struct ApplicationGatewaySslProtocol : IEquatable<NetworkInterface.Models.ApplicationGatewaySslProtocol>
    {
        private readonly string _value;

        /// <summary> Determines if two <see cref="ApplicationGatewaySslProtocol"/> values are the same. </summary>
        public ApplicationGatewaySslProtocol(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string TLSv10Value = "TLSv1_0";
        private const string TLSv1Value = "TLSv1_1";
        private const string TLSv12Value = "TLSv1_2";

        /// <summary> TLSv1_0. </summary>
        public static NetworkInterface.Models.ApplicationGatewaySslProtocol TLSv10 { get; } = new NetworkInterface.Models.ApplicationGatewaySslProtocol(TLSv10Value);
        /// <summary> TLSv1_1. </summary>
        public static NetworkInterface.Models.ApplicationGatewaySslProtocol TLSv1 { get; } = new NetworkInterface.Models.ApplicationGatewaySslProtocol(TLSv1Value);
        /// <summary> TLSv1_2. </summary>
        public static NetworkInterface.Models.ApplicationGatewaySslProtocol TLSv12 { get; } = new NetworkInterface.Models.ApplicationGatewaySslProtocol(TLSv12Value);
        /// <summary> Determines if two <see cref="ApplicationGatewaySslProtocol"/> values are the same. </summary>
        public static bool operator ==(NetworkInterface.Models.ApplicationGatewaySslProtocol left, NetworkInterface.Models.ApplicationGatewaySslProtocol right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ApplicationGatewaySslProtocol"/> values are not the same. </summary>
        public static bool operator !=(NetworkInterface.Models.ApplicationGatewaySslProtocol left, NetworkInterface.Models.ApplicationGatewaySslProtocol right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="ApplicationGatewaySslProtocol"/>. </summary>
        public static implicit operator NetworkInterface.Models.ApplicationGatewaySslProtocol(string value) => new NetworkInterface.Models.ApplicationGatewaySslProtocol(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is NetworkInterface.Models.ApplicationGatewaySslProtocol other && Equals(other);
        /// <inheritdoc />
        public bool Equals(NetworkInterface.Models.ApplicationGatewaySslProtocol other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
