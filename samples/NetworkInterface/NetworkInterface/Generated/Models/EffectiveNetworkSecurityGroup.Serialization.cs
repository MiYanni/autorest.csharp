// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace NetworkInterface.Models
{
    public partial class EffectiveNetworkSecurityGroup : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (NetworkSecurityGroup != null)
            {
                writer.WritePropertyName("networkSecurityGroup");
                writer.WriteObjectValue(NetworkSecurityGroup);
            }
            if (Association != null)
            {
                writer.WritePropertyName("association");
                writer.WriteObjectValue(Association);
            }
            if (EffectiveSecurityRules != null)
            {
                writer.WritePropertyName("effectiveSecurityRules");
                writer.WriteStartArray();
                foreach (var item in EffectiveSecurityRules)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (TagMap != null)
            {
                writer.WritePropertyName("tagMap");
                writer.WriteStringValue(TagMap);
            }
            writer.WriteEndObject();
        }
        internal static NetworkInterface.Models.EffectiveNetworkSecurityGroup DeserializeEffectiveNetworkSecurityGroup(JsonElement element)
        {
            NetworkInterface.Models.EffectiveNetworkSecurityGroup result = new NetworkInterface.Models.EffectiveNetworkSecurityGroup();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("networkSecurityGroup"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.NetworkSecurityGroup = NetworkInterface.Models.SubResource.DeserializeSubResource(property.Value);
                    continue;
                }
                if (property.NameEquals("association"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Association = NetworkInterface.Models.EffectiveNetworkSecurityGroupAssociation.DeserializeEffectiveNetworkSecurityGroupAssociation(property.Value);
                    continue;
                }
                if (property.NameEquals("effectiveSecurityRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.EffectiveSecurityRules = new List<NetworkInterface.Models.EffectiveNetworkSecurityRule>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.EffectiveSecurityRules.Add(NetworkInterface.Models.EffectiveNetworkSecurityRule.DeserializeEffectiveNetworkSecurityRule(item));
                    }
                    continue;
                }
                if (property.NameEquals("tagMap"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.TagMap = property.Value.GetString();
                    continue;
                }
            }
            return result;
        }
    }
}
