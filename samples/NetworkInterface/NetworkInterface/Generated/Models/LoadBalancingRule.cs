// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace NetworkInterface.Models
{
    /// <summary> A load balancing rule for a load balancer. </summary>
    public partial class LoadBalancingRule : NetworkInterface.Models.SubResource
    {
        /// <summary> The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource. </summary>
        public string Name { get; set; }
        /// <summary> A unique read-only string that changes whenever the resource is updated. </summary>
        public string Etag { get; internal set; }
        /// <summary> Type of the resource. </summary>
        public string Type { get; internal set; }
        /// <summary> A reference to frontend IP addresses. </summary>
        public NetworkInterface.Models.SubResource FrontendIPConfiguration { get; set; }
        /// <summary> A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs. </summary>
        public NetworkInterface.Models.SubResource BackendAddressPool { get; set; }
        /// <summary> The reference to the load balancer probe used by the load balancing rule. </summary>
        public NetworkInterface.Models.SubResource Probe { get; set; }
        /// <summary> The reference to the transport protocol used by the load balancing rule. </summary>
        public NetworkInterface.Models.TransportProtocol? Protocol { get; set; }
        /// <summary> The load distribution policy for this rule. </summary>
        public NetworkInterface.Models.LoadDistribution? LoadDistribution { get; set; }
        /// <summary> The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables &quot;Any Port&quot;. </summary>
        public int? FrontendPort { get; set; }
        /// <summary> The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables &quot;Any Port&quot;. </summary>
        public int? BackendPort { get; set; }
        /// <summary> The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP. </summary>
        public int? IdleTimeoutInMinutes { get; set; }
        /// <summary> Configures a virtual machine&apos;s endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can&apos;t be changed after you create the endpoint. </summary>
        public bool? EnableFloatingIP { get; set; }
        /// <summary> Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP. </summary>
        public bool? EnableTcpReset { get; set; }
        /// <summary> Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule. </summary>
        public bool? DisableOutboundSnat { get; set; }
        /// <summary> The provisioning state of the load balancing rule resource. </summary>
        public NetworkInterface.Models.ProvisioningState? ProvisioningState { get; internal set; }
    }
}
