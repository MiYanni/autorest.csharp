// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace NetworkInterface.Models
{
    public partial class NetworkSecurityGroupPropertiesFormat : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (SecurityRules != null)
            {
                writer.WritePropertyName("securityRules");
                writer.WriteStartArray();
                foreach (var item in SecurityRules)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (DefaultSecurityRules != null)
            {
                writer.WritePropertyName("defaultSecurityRules");
                writer.WriteStartArray();
                foreach (var item in DefaultSecurityRules)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (NetworkInterfaces != null)
            {
                writer.WritePropertyName("networkInterfaces");
                writer.WriteStartArray();
                foreach (var item in NetworkInterfaces)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Subnets != null)
            {
                writer.WritePropertyName("subnets");
                writer.WriteStartArray();
                foreach (var item in Subnets)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (ResourceGuid != null)
            {
                writer.WritePropertyName("resourceGuid");
                writer.WriteStringValue(ResourceGuid);
            }
            if (ProvisioningState != null)
            {
                writer.WritePropertyName("provisioningState");
                writer.WriteStringValue(ProvisioningState.Value.ToString());
            }
            writer.WriteEndObject();
        }
        internal static NetworkInterface.Models.NetworkSecurityGroupPropertiesFormat DeserializeNetworkSecurityGroupPropertiesFormat(JsonElement element)
        {
            NetworkInterface.Models.NetworkSecurityGroupPropertiesFormat result = new NetworkInterface.Models.NetworkSecurityGroupPropertiesFormat();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("securityRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SecurityRules = new List<NetworkInterface.Models.SecurityRule>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.SecurityRules.Add(NetworkInterface.Models.SecurityRule.DeserializeSecurityRule(item));
                    }
                    continue;
                }
                if (property.NameEquals("defaultSecurityRules"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DefaultSecurityRules = new List<NetworkInterface.Models.SecurityRule>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.DefaultSecurityRules.Add(NetworkInterface.Models.SecurityRule.DeserializeSecurityRule(item));
                    }
                    continue;
                }
                if (property.NameEquals("networkInterfaces"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.NetworkInterfaces = new List<NetworkInterface.Models.NetworkInterface>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.NetworkInterfaces.Add(NetworkInterface.Models.NetworkInterface.DeserializeNetworkInterface(item));
                    }
                    continue;
                }
                if (property.NameEquals("subnets"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Subnets = new List<NetworkInterface.Models.Subnet>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.Subnets.Add(NetworkInterface.Models.Subnet.DeserializeSubnet(item));
                    }
                    continue;
                }
                if (property.NameEquals("resourceGuid"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ResourceGuid = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ProvisioningState = new NetworkInterface.Models.ProvisioningState(property.Value.GetString());
                    continue;
                }
            }
            return result;
        }
    }
}
