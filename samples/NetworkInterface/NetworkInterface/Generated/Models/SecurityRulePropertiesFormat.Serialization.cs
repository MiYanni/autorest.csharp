// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace NetworkInterface.Models
{
    public partial class SecurityRulePropertiesFormat : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Description != null)
            {
                writer.WritePropertyName("description");
                writer.WriteStringValue(Description);
            }
            writer.WritePropertyName("protocol");
            writer.WriteStringValue(Protocol.ToString());
            if (SourcePortRange != null)
            {
                writer.WritePropertyName("sourcePortRange");
                writer.WriteStringValue(SourcePortRange);
            }
            if (DestinationPortRange != null)
            {
                writer.WritePropertyName("destinationPortRange");
                writer.WriteStringValue(DestinationPortRange);
            }
            if (SourceAddressPrefix != null)
            {
                writer.WritePropertyName("sourceAddressPrefix");
                writer.WriteStringValue(SourceAddressPrefix);
            }
            if (SourceAddressPrefixes != null)
            {
                writer.WritePropertyName("sourceAddressPrefixes");
                writer.WriteStartArray();
                foreach (var item in SourceAddressPrefixes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (SourceApplicationSecurityGroups != null)
            {
                writer.WritePropertyName("sourceApplicationSecurityGroups");
                writer.WriteStartArray();
                foreach (var item in SourceApplicationSecurityGroups)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (DestinationAddressPrefix != null)
            {
                writer.WritePropertyName("destinationAddressPrefix");
                writer.WriteStringValue(DestinationAddressPrefix);
            }
            if (DestinationAddressPrefixes != null)
            {
                writer.WritePropertyName("destinationAddressPrefixes");
                writer.WriteStartArray();
                foreach (var item in DestinationAddressPrefixes)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (DestinationApplicationSecurityGroups != null)
            {
                writer.WritePropertyName("destinationApplicationSecurityGroups");
                writer.WriteStartArray();
                foreach (var item in DestinationApplicationSecurityGroups)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (SourcePortRanges != null)
            {
                writer.WritePropertyName("sourcePortRanges");
                writer.WriteStartArray();
                foreach (var item in SourcePortRanges)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (DestinationPortRanges != null)
            {
                writer.WritePropertyName("destinationPortRanges");
                writer.WriteStartArray();
                foreach (var item in DestinationPortRanges)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WritePropertyName("access");
            writer.WriteStringValue(Access.ToString());
            if (Priority != null)
            {
                writer.WritePropertyName("priority");
                writer.WriteNumberValue(Priority.Value);
            }
            writer.WritePropertyName("direction");
            writer.WriteStringValue(Direction.ToString());
            if (ProvisioningState != null)
            {
                writer.WritePropertyName("provisioningState");
                writer.WriteStringValue(ProvisioningState.Value.ToString());
            }
            writer.WriteEndObject();
        }
        internal static NetworkInterface.Models.SecurityRulePropertiesFormat DeserializeSecurityRulePropertiesFormat(JsonElement element)
        {
            NetworkInterface.Models.SecurityRulePropertiesFormat result = new NetworkInterface.Models.SecurityRulePropertiesFormat();
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("description"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Description = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("protocol"))
                {
                    result.Protocol = new NetworkInterface.Models.SecurityRuleProtocol(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("sourcePortRange"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SourcePortRange = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("destinationPortRange"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DestinationPortRange = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceAddressPrefix"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SourceAddressPrefix = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("sourceAddressPrefixes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SourceAddressPrefixes = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.SourceAddressPrefixes.Add(item.GetString());
                    }
                    continue;
                }
                if (property.NameEquals("sourceApplicationSecurityGroups"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SourceApplicationSecurityGroups = new List<NetworkInterface.Models.ApplicationSecurityGroup>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.SourceApplicationSecurityGroups.Add(NetworkInterface.Models.ApplicationSecurityGroup.DeserializeApplicationSecurityGroup(item));
                    }
                    continue;
                }
                if (property.NameEquals("destinationAddressPrefix"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DestinationAddressPrefix = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("destinationAddressPrefixes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DestinationAddressPrefixes = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.DestinationAddressPrefixes.Add(item.GetString());
                    }
                    continue;
                }
                if (property.NameEquals("destinationApplicationSecurityGroups"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DestinationApplicationSecurityGroups = new List<NetworkInterface.Models.ApplicationSecurityGroup>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.DestinationApplicationSecurityGroups.Add(NetworkInterface.Models.ApplicationSecurityGroup.DeserializeApplicationSecurityGroup(item));
                    }
                    continue;
                }
                if (property.NameEquals("sourcePortRanges"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.SourcePortRanges = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.SourcePortRanges.Add(item.GetString());
                    }
                    continue;
                }
                if (property.NameEquals("destinationPortRanges"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.DestinationPortRanges = new List<string>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        result.DestinationPortRanges.Add(item.GetString());
                    }
                    continue;
                }
                if (property.NameEquals("access"))
                {
                    result.Access = new NetworkInterface.Models.SecurityRuleAccess(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("priority"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.Priority = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("direction"))
                {
                    result.Direction = new NetworkInterface.Models.SecurityRuleDirection(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("provisioningState"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    result.ProvisioningState = new NetworkInterface.Models.ProvisioningState(property.Value.GetString());
                    continue;
                }
            }
            return result;
        }
    }
}
